# mouse
#set -g mode-mouse on
#set -g mouse-select-pane on

#set -g mouse-utf8 on
set -g mouse on
# set -g clipboard on
# bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
# bind -n WheelDownPane select-pane -t= \;                 send-keys -M

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
# set -g default-terminal screen-256color
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "screen-256color"


# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Smart pane switching with awareness of vim splits
# bind -n C-k run-shell '~/bin/tmux-vim-select-pane -U'
# bind -n C-j run-shell '~/bin/tmux-vim-select-pane -D'
# bind -n C-h run-shell '~/bin/tmux-vim-select-pane -L'
# bind -n C-l run-shell '~/bin/tmux-vim-select-pane -R'
# bind -n "C-\\" run-shell '~/bin/tmux-vim-select-pane -l'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h   if-shell  "$is_vim"  "send-keys C-h"    "select-pane -L"
bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"    "select-pane -D"
bind-key -n C-k   if-shell  "$is_vim"  "send-keys C-k"    "select-pane -U"
bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"    "select-pane -R"
bind-key -n 'C-\' if-shell  "$is_vim"  "send-keys C-\\\\" "select-pane -l"


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mouse on

# color scheme (styled as vim-powerline)
set -g status on
set -g status-utf8 on
# set -g status-left-length 52
# set -g status-right-length 451

# set -g status-bg '#414868'
# set -g status-fg 'default'

### https://github.com/folke/tokyonight.nvim/blob/main/extras/tmux/tokyonight_night.tmux 
set -g mode-style "fg=#7aa2f7,bg=#3b4261"

set -g message-style "fg=#7aa2f7,bg=#3b4261"
set -g message-command-style "fg=#7aa2f7,bg=#3b4261"

set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#7aa2f7"

set -g status "on"
set -g status-justify "left"

set -g status-style "fg=#7aa2f7,bg=#16161e"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left "#[fg=#15161e,bg=#7aa2f7,bold] #S #[fg=#7aa2f7,bg=#16161e,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#16161e] #{prefix_highlight} #[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261] %Y-%m-%d  %I:%M %p #[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#15161e,bg=#7aa2f7,bold] #h "

setw -g window-status-activity-style "underscore,fg=#a9b1d6,bg=#16161e"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#a9b1d6,bg=#16161e"
setw -g window-status-format '#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]#[default] #I  #(despell -c #W) #W [#(pwd="#{pane_current_path}"; echo ${pwd####*/})]#[fg=#16161e,bg=#16161e,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=#16161e,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#7aa2f7,bg=#3b4261,bold] #I  #(despell -c #W) #W [#(pwd="#{pane_current_path}"; echo ${pwd####*/})]#[fg=#3b4261,bg=#16161e,nobold,nounderscore,noitalics]'

# set active-inactive window styles
set -g window-active-style 'fg=terminal,bg=terminal'
set -g window-style 'fg=terminal,bg=black'

# tmux-plugins/tmux-prefix-highlight support
set -g @prefix_highlight_output_prefix "#[fg=#e0af68]#[bg=#16161e]#[fg=#16161e]#[bg=#e0af68]"
set -g @prefix_highlight_output_suffix ""

### 

# set -g status-style fg=white,bg=colour234
# set -g pane-border-style fg=colour245
# set -g pane-active-border-style fg=colour39
#-------------------------------------------------------#
# Pane colours
#-------------------------------------------------------#
# set active-inactive window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=default,bg=colour234'

# # Pane border
# set -g pane-border-bg default
# set -g pane-border-fg colour238

# # Active pane border
# set -g pane-active-border-bg default
# set -g pane-active-border-fg blue
#-------------------------------------------------------#
#
#-------------------------------------------------------#


# set -g message-style fg=colour16,bg=colour221,bold
# set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
# set -g window-status-format '#[fg=colour235,bg=colour252,bold] #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W '
# set -g window-status-current-format '#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour39,bg=colour234,nobold]⮀'
# set-option -g status-interval 2

# tmux_active_fg=color255
# tmux_inactive_fg=default

# tmux_bg=#232235

# set-window-option -g window-status-separator ' | '
# set-option -g status-style bg=$tmux_bg
# set-option -g status-left ""
# set-option -g status-right ""

# set -g status-justify centre

## Active
#set-window-option -g window-status-current-format '\
##[bg=green,fg=white,bright][#I]\
##[bg=green,fg=white,bright] #(despell -c #W)\
##[bg=green,fg=white,bright] #W\
##[bg=green,fg=white,bright] (#(pwd="#{pane_current_path}"; echo ${pwd####*/}))\
#'


## Inactive
#set-window-option -g window-status-format '\
#[#I]\
##[fg=$tmux_inactive_fg,bg=$tmux_bg] #(despell -c #W)\
##[fg=$tmux_inactive_fg,dim bg=$tmux_bg] #W\
# (#(pwd="#{pane_current_path}"; echo ${pwd####*/}))\
#'

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

bind Q killw

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# https://github.com/tmux-plugins/tmux-continuum
set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'


